[{"/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/index.js":"1","/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/reportWebVitals.js":"2","/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/App.js":"3","/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/components/Home/Home.js":"4","/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/components/BeerDetail/BeerDetail.js":"5","/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/components/Navbar/Navbar.js":"6","/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/components/Beer/Beer.js":"7","/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/components/PostBeer/PostBeer.js":"8"},{"size":500,"mtime":1612343173912,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1612343173912,"results":"11","hashOfConfig":"10"},{"size":1122,"mtime":1612464242050,"results":"12","hashOfConfig":"10"},{"size":129,"mtime":1612464242054,"results":"13","hashOfConfig":"10"},{"size":689,"mtime":1612464242050,"results":"14","hashOfConfig":"10"},{"size":164,"mtime":1612464242054,"results":"15","hashOfConfig":"10"},{"size":2603,"mtime":1612464242050,"results":"16","hashOfConfig":"10"},{"size":5478,"mtime":1612464242058,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x2wymj",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/index.js",[],"/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/reportWebVitals.js",[],"/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/App.js",[],"/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/components/Home/Home.js",[],["37","38"],"/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/components/BeerDetail/BeerDetail.js",["39","40"],"import react, { useState, useEffect } from 'react';\nimport './BeerDetail.scss';\nimport axios from 'axios';\n\nconst BeerDetail = (props) => {\n  const { match } = props;\n  const data = match.params.id;\n\n  const [beer, setBeer] = useState([]);\n\n  useEffect(() => {\n    axios.get(`http://localhost:5000/beer/${data}`).then((response) => {\n      setBeer(response.data);\n      console.log(response.data);\n    });\n  }, []);\n\n  return (\n    <>\n      {beer && (\n        <div>\n          <img src={beer.image_url} alt={beer.name} />\n          <p>{beer.name}</p>\n          <div>\n            <p>{beer.description}</p>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default BeerDetail;\n","/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/components/Navbar/Navbar.js",[],"/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/components/Beer/Beer.js",[],"/home/verin/Checkpoint/Checkpoint_4/wiki-beer/src/components/PostBeer/PostBeer.js",["41","42"],"import react, { useEffect } from 'react';\nimport axios from 'axios';\nimport './PostBeer.scss';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm, Controller } from 'react-hook-form';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useToasts } from 'react-toast-notifications';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    backgroundColor: '#6d071a',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: '#6d071a',\n    },\n  },\n  input: {\n    [theme.breakpoints.up('md')]: {\n      width: '400px',\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#6d071a',\n    },\n    '& .MuiOutlinedInput-input': {\n      color: '#6d071a',\n    },\n    '& .MuiInputLabel-outlined.Mui-focused': {\n      color: '#6d071a',\n    },\n  },\n}));\n\nconst PostBeer = () => {\n  const classes = useStyles();\n  const { addToast } = useToasts();\n\n  const { register, handleSubmit, errors, control } = useForm({\n    mode: 'onSubmit',\n  });\n\n  useEffect(() => {\n    if (errors) {\n      const arrayErrors = Object.values(errors);\n      arrayErrors.map((error) =>\n        addToast(error.message, {\n          appearance: 'error',\n          autoDismiss: true,\n        })\n      );\n    }\n  }, [errors]);\n\n  const onSubmit = async (data) => {\n    try {\n      await axios.post('http://localhost:5000/beer/', data);\n      addToast('Votre compte a été creé, vous pouvez vous connecter', {\n        appearance: 'success',\n        autoDismiss: true,\n      });\n    } catch (err) {\n      if (err.response.status === 500) {\n        addToast(\n          'Erreur lors de votre inscription, veuillez rééssayer plus tard',\n          {\n            appearance: 'error',\n            autoDismiss: true,\n          }\n        );\n      }\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1>You dont find your beer in our list ? Post it !</h1>\n\n        <div className='input-post-form'>\n          <TextField\n            className={classes.input}\n            id='outlined-basic'\n            label='Name'\n            variant='outlined'\n            inputRef={register({\n              required: 'Please specify a name.',\n            })}\n            name='name'\n          />\n          <TextField\n            className={classes.input}\n            id='outlined-basic'\n            label='Brand'\n            variant='outlined'\n            inputRef={register({\n              required: 'Please specify a brand.',\n            })}\n            name='brand'\n          />\n          <TextField\n            className={classes.input}\n            id='outlined-basic'\n            label='Country'\n            variant='outlined'\n            inputRef={register({\n              required: 'Please specify a country.',\n            })}\n            name='country'\n          />\n          <TextField\n            className={classes.input}\n            id='outlined-basic'\n            label='Price'\n            variant='outlined'\n            inputRef={register({\n              required: 'Please specify a price.',\n            })}\n            name='price'\n          />\n          <div className='input-contact-form'>\n            <InputLabel>Type of beer</InputLabel>\n            <Controller\n              as={\n                // eslint-disable-next-line react/jsx-wrap-multilines\n                <Select\n                  ref={register({\n                    required: 'select one option',\n                  })}\n                >\n                  <MenuItem value=\"J'ai une question\">Pils</MenuItem>\n                  <MenuItem value='Je souhaite devenir partenaire'>\n                    IPA\n                  </MenuItem>\n                  <MenuItem value='Je souhaite devenir animateur'>\n                    Lager\n                  </MenuItem>\n                </Select>\n              }\n              control={control}\n              name='type'\n              defaultValue=''\n              rules={{ required: 'Merci de choisir un sujet' }}\n              className={classes.input}\n            />\n          </div>\n          <TextField\n            className={classes.input}\n            id='outlined-basic'\n            label='Description'\n            variant='outlined'\n            inputRef={register({\n              required: 'Please insert a name.',\n            })}\n            name='description'\n          />\n          <TextField\n            className={classes.input}\n            id='outlined-basic'\n            label='Advice'\n            variant='outlined'\n            inputRef={register({\n              required: 'Please insert a name.',\n            })}\n            name='advice'\n          />\n          <TextField\n            className={classes.input}\n            id='outlined-basic'\n            label='Image (URL)'\n            variant='outlined'\n            inputRef={register({\n              required: 'Please insert a name.',\n            })}\n            name='image_url'\n          />\n        </div>\n\n        <div className='button-register-form'>\n          <Button\n            className={classes.btn}\n            type='submit'\n            variant='contained'\n            color='primary'\n          >\n            Add new beer\n          </Button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default PostBeer;\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":13},{"ruleId":"51","severity":1,"message":"52","line":16,"column":6,"nodeType":"53","endLine":16,"endColumn":8,"suggestions":"54"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":13},{"ruleId":"51","severity":1,"message":"55","line":55,"column":6,"nodeType":"53","endLine":55,"endColumn":14,"suggestions":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["59"],"React Hook useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},{"desc":"63","fix":"64"},"Update the dependencies array to be: [data]",{"range":"65","text":"66"},"Update the dependencies array to be: [addToast, errors]",{"range":"67","text":"68"},[411,413],"[data]",[1466,1474],"[addToast, errors]"]